--------------------------------------------------------------------------------
Command:            prog
Massif arguments:   (none)
ms_print arguments: massif.out.8194
--------------------------------------------------------------------------------


    MB
14.61^                                                                       #
     |                                                                       #
     |                                                                   :::@#
     |                                                             ::::@::::@#
     |                                                    :::@::::@::::@::::@#
     |                                          ::::::::@::::@::::@::::@::::@#
     |                             ::::::::::::@:::::: :@::::@::::@::::@::::@#
     |                   ::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |                   ::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |                   ::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |                   ::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |                 :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |             :::::@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |       ::::::@ : :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |    :::::::::@ : :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |    :::::::::@ : :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |    :::::::::@ : :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     | ::::::::::::@ : :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     | ::::::::::::@ : :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
     |:::::::::::::@ : :@::::::::::::::::::::: @:::::: :@::::@::::@::::@::::@#
   0 +----------------------------------------------------------------------->Gi
     0                                                                   162.8

Number of snapshots: 96
 Detailed snapshots: [14, 19, 42, 52, 62, 72, 82, 92, 95 (peak)]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1  1,887,089,600        1,468,800          881,280       587,520            0
  2  3,978,314,221        2,621,040        1,572,624     1,048,416            0
  3  5,572,779,421        2,765,040        1,659,024     1,106,016            0
  4  8,157,833,380        3,055,480        1,833,288     1,222,192            0
  5 11,632,337,906        5,107,360        3,064,416     2,042,944            0
  6 14,051,020,744        5,204,720        3,122,832     2,081,888            0
  7 16,738,460,576        5,317,680        3,190,608     2,127,072            0
  8 19,245,239,972        5,428,240        3,256,944     2,171,296            0
  9 21,036,590,321        5,510,760        3,306,456     2,204,304            0
 10 23,353,313,996        5,622,480        3,373,488     2,248,992            0
 11 25,212,816,977        5,716,840        3,430,104     2,286,736            0
 12 27,868,251,572        5,860,240        3,516,144     2,344,096            0
 13 29,727,053,344        5,967,920        3,580,752     2,387,168            0
 14 31,851,797,537        6,100,200        3,660,120     2,440,080            0
60.00% (3,660,120B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->34.82% (2,124,048B) 0x400A57: containsList (linkedList.c:277)
| ->34.82% (2,124,048B) 0x400BF2: main (linkedListMain.c:28)
|   
->25.18% (1,536,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->25.18% (1,536,000B) 0x400A3C: addList (linkedList.c:261)
|   ->25.18% (1,536,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 15 33,975,363,556        6,244,880        3,746,928     2,497,952            0
 16 37,004,924,936        6,482,160        3,889,296     2,592,864            0
 17 38,800,379,147        6,649,240        3,989,544     2,659,696            0
 18 42,031,381,042        7,060,640        4,236,384     2,824,256            0
 19 43,711,456,589        7,640,120        4,584,072     3,056,048            0
60.00% (4,584,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->39.89% (3,048,000B) 0x400A57: containsList (linkedList.c:277)
| ->39.89% (3,048,000B) 0x400BF2: main (linkedListMain.c:28)
|   
->20.10% (1,536,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->20.10% (1,536,000B) 0x400A3C: addList (linkedList.c:261)
|   ->20.10% (1,536,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 20 46,230,409,486       10,249,280        6,149,568     4,099,712            0
 21 49,110,666,922       10,306,400        6,183,840     4,122,560            0
 22 51,990,018,806       10,364,160        6,218,496     4,145,664            0
 23 54,638,032,051       10,417,880        6,250,728     4,167,152            0
 24 57,660,253,264       10,479,920        6,287,952     4,191,968            0
 25 59,473,170,164       10,517,520        6,310,512     4,207,008            0
 26 61,892,479,706       10,568,160        6,340,896     4,227,264            0
 27 64,308,711,236       10,619,280        6,371,568     4,247,712            0
 28 66,728,567,582       10,671,040        6,402,624     4,268,416            0
 29 69,143,699,836       10,723,280        6,433,968     4,289,312            0
 30 71,560,626,506       10,776,160        6,465,696     4,310,464            0
 31 73,978,332,296       10,829,680        6,497,808     4,331,872            0
 32 75,187,156,721       10,856,680        6,514,008     4,342,672            0
 33 77,604,100,631       10,911,160        6,546,696     4,364,464            0
 34 80,019,231,661       10,966,280        6,579,768     4,386,512            0
 35 81,229,248,056       10,994,160        6,596,496     4,397,664            0
 36 83,646,458,722       11,050,400        6,630,240     4,420,160            0
 37 86,516,790,956       11,118,160        6,670,896     4,447,264            0
 38 88,668,465,796       11,169,680        6,701,808     4,467,872            0
 39 91,539,611,252       11,239,440        6,743,664     4,495,776            0
 40 94,407,010,264       11,310,320        6,786,192     4,524,128            0
 41 96,557,823,514       11,364,320        6,818,592     4,545,728            0
 42 100,144,192,457       11,456,040        6,873,624     4,582,416            0
60.00% (6,873,624B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->33.18% (3,801,552B) 0x400A57: containsList (linkedList.c:277)
| ->33.18% (3,801,552B) 0x400BF2: main (linkedListMain.c:28)
|   
->26.82% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->26.82% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->26.82% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 43 103,729,407,661       11,549,960        6,929,976     4,619,984            0
 44 105,881,568,791       11,607,480        6,964,488     4,642,992            0
 45 108,750,062,071       11,685,560        7,011,336     4,674,224            0
 46 110,901,470,867       11,745,240        7,047,144     4,698,096            0
 47 113,771,458,477       11,826,440        7,095,864     4,730,576            0
 48 115,923,927,187       11,888,600        7,133,160     4,755,440            0
 49 119,509,347,914       11,994,720        7,196,832     4,797,888            0
 50 120,718,499,536       12,031,280        7,218,768     4,812,512            0
 51 121,928,594,711       12,068,280        7,240,968     4,827,312            0
 52 123,137,859,196       12,105,680        7,263,408     4,842,272            0
60.00% (7,263,408B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->34.62% (4,191,336B) 0x400A57: containsList (linkedList.c:277)
| ->34.62% (4,191,336B) 0x400BF2: main (linkedListMain.c:28)
|   
->25.38% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->25.38% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->25.38% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 53 124,347,114,914       12,143,520        7,286,112     4,857,408            0
 54 125,557,117,772       12,181,840        7,309,104     4,872,736            0
 55 126,766,076,087       12,220,600        7,332,360     4,888,240            0
 56 127,975,926,601       12,259,880        7,355,928     4,903,952            0
 57 129,184,848,287       12,299,640        7,379,784     4,919,856            0
 58 130,394,652,911       12,339,960        7,403,976     4,935,984            0
 59 131,603,487,302       12,380,800        7,428,480     4,952,320            0
 60 132,813,032,842       12,422,240        7,453,344     4,968,896            0
 61 134,022,543,611       12,464,280        7,478,568     4,985,712            0
 62 135,232,388,236       12,506,960        7,504,176     5,002,784            0
60.00% (7,504,176B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->35.44% (4,432,104B) 0x400A57: containsList (linkedList.c:277)
| ->35.44% (4,432,104B) 0x400BF2: main (linkedListMain.c:28)
|   
->24.56% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->24.56% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->24.56% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 63 136,441,747,261       12,550,280        7,530,168     5,020,112            0
 64 137,650,879,361       12,594,280        7,556,568     5,037,712            0
 65 138,859,959,467       12,639,000        7,583,400     5,055,600            0
 66 140,069,075,966       12,684,480        7,610,688     5,073,792            0
 67 141,278,227,741       12,730,760        7,638,456     5,092,304            0
 68 142,487,321,051       12,777,880        7,666,728     5,111,152            0
 69 143,696,166,251       12,825,880        7,695,528     5,130,352            0
 70 144,905,452,547       12,874,840        7,724,904     5,149,936            0
 71 146,114,728,102       12,924,800        7,754,880     5,169,920            0
 72 147,324,369,722       12,975,840        7,785,504     5,190,336            0
60.00% (7,785,504B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->36.32% (4,713,432B) 0x400A57: containsList (linkedList.c:277)
| ->36.32% (4,713,432B) 0x400BF2: main (linkedListMain.c:28)
|   
->23.67% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->23.67% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->23.67% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 73 148,533,640,642       13,028,000        7,816,800     5,211,200            0
 74 149,742,579,476       13,081,360        7,848,816     5,232,544            0
 75 150,951,886,457       13,136,040        7,881,624     5,254,416            0
 76 152,161,098,839       13,192,120        7,915,272     5,276,848            0
 77 153,370,346,039       13,249,720        7,949,832     5,299,888            0
 78 154,579,415,186       13,308,960        7,985,376     5,323,584            0
 79 155,788,512,292       13,370,000        8,022,000     5,348,000            0
 80 156,997,361,017       13,433,000        8,059,800     5,373,200            0
 81 158,206,630,307       13,498,200        8,098,920     5,399,280            0
 82 159,415,526,177       13,565,800        8,139,480     5,426,320            0
60.00% (8,139,480B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->37.35% (5,067,408B) 0x400A57: containsList (linkedList.c:277)
| ->37.35% (5,067,408B) 0x400BF2: main (linkedListMain.c:28)
|   
->22.65% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->22.65% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->22.65% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 83 160,624,571,339       13,636,120        8,181,672     5,454,448            0
 84 161,833,827,164       13,709,520        8,225,712     5,483,808            0
 85 163,043,261,477       13,786,440        8,271,864     5,514,576            0
 86 164,252,307,997       13,867,400        8,320,440     5,546,960            0
 87 165,461,547,581       13,953,160        8,371,896     5,581,264            0
 88 166,670,881,421       14,044,680        8,426,808     5,617,872            0
 89 167,880,040,336       14,143,280        8,485,968     5,657,312            0
 90 169,089,060,889       14,250,920        8,550,552     5,700,368            0
 91 170,298,047,071       14,370,680        8,622,408     5,748,272            0
 92 171,507,141,764       14,507,920        8,704,752     5,803,168            0
60.00% (8,704,752B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->38.82% (5,632,680B) 0x400A57: containsList (linkedList.c:277)
| ->38.82% (5,632,680B) 0x400BF2: main (linkedListMain.c:28)
|   
->21.17% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->21.17% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->21.17% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 93 172,716,114,737       14,673,640        8,804,184     5,869,456            0
 94 173,925,061,514       14,900,320        8,940,192     5,960,128            0
 95 174,807,012,735       15,320,120        9,192,072     6,128,048            0
60.00% (9,192,072B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->39.95% (6,120,000B) 0x400A57: containsList (linkedList.c:277)
| ->39.95% (6,120,000B) 0x400BF2: main (linkedListMain.c:28)
|   
->20.05% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->20.05% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->20.05% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (72B) in 1+ places, all below ms_print's threshold (01.00%)

