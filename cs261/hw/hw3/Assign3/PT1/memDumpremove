--------------------------------------------------------------------------------
Command:            prog
Massif arguments:   (none)
ms_print arguments: massif.out.18055
--------------------------------------------------------------------------------


    MB
4.883^                  #                                                     
     |                  #::::                                                 
     |                  #::::::::::                                           
     |                  #:::::: :: :::::                                      
     |                  #:::::: :: :::: ::::                                  
     |                  #:::::: :: :::: :::::::::                             
     |                  #:::::: :: :::: :::::::: :::                          
     |                  #:::::: :: :::: :::::::: :::::@:                      
     |                  #:::::: :: :::: :::::::: :::::@::::                   
     |                  #:::::: :: :::: :::::::: :::::@:::::@::               
     |                  #:::::: :: :::: :::::::: :::::@:::::@::::             
     |    :::           #:::::: :: :::: :::::::: :::::@:::::@:::::@:          
     |    :::@::        #:::::: :: :::: :::::::: :::::@:::::@:::::@:::        
     |    :::@:::       #:::::: :: :::: :::::::: :::::@:::::@:::::@::::@      
     |    :::@:::::     #:::::: :: :::: :::::::: :::::@:::::@:::::@::::@::    
     |    :::@::::::@   #:::::: :: :::: :::::::: :::::@:::::@:::::@::::@:::   
     | :  :::@::::::@:  #:::::: :: :::: :::::::: :::::@:::::@:::::@::::@::::: 
     | :: :::@::::::@:: #:::::: :: :::: :::::::: :::::@:::::@:::::@::::@::::: 
     |:::::::@::::::@::@#:::::: :: :::: :::::::: :::::@:::::@:::::@::::@:::::@
     |:::::::@::::::@::@#:::::: :: :::: :::::::: :::::@:::::@:::::@::::@:::::@
   0 +----------------------------------------------------------------------->Gi
     0                                                                   151.6

Number of snapshots: 98
 Detailed snapshots: [8, 16, 20, 21 (peak), 56, 66, 76, 86, 96]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1  1,288,563,792          521,600          312,960       208,640            0
  2  3,436,390,129        1,205,640          723,384       482,256            0
  3  6,129,180,460          937,680          562,608       375,072            0
  4  8,786,375,095          559,080          335,448       223,632            0
  5 10,876,486,716        2,534,280        1,520,568     1,013,712            0
  6 12,234,228,946        2,476,480        1,485,888       990,592            0
  7 14,332,528,419        2,384,400        1,430,640       953,760            0
  8 17,200,177,346        2,252,480        1,351,488       900,992            0
60.00% (1,351,488B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,351,392B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->60.00% (1,351,392B) 0x400A3C: addList (linkedList.c:261)
|   ->60.00% (1,351,392B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  9 19,004,522,933        2,165,360        1,299,216       866,144            0
 10 20,406,669,653        2,095,160        1,257,096       838,064            0
 11 22,209,585,766        2,001,280        1,200,768       800,512            0
 12 24,813,067,983        1,857,360        1,114,416       742,944            0
 13 26,235,549,554        1,773,800        1,064,280       709,520            0
 14 27,938,968,635        1,668,240        1,000,944       667,296            0
 15 30,665,105,693        1,483,760          890,256       593,504            0
 16 32,028,171,457        1,382,320          829,392       552,928            0
60.00% (829,392B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (829,296B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->59.99% (829,296B) 0x400A3C: addList (linkedList.c:261)
|   ->59.99% (829,296B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.01% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 17 34,072,975,283        1,214,360          728,616       485,744            0
 18 35,776,483,089        1,054,200          632,520       421,680            0
 19 37,138,906,898          905,960          543,576       362,384            0
 20 38,842,432,708          676,360          405,816       270,544            0
60.00% (405,816B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (405,720B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->59.99% (405,720B) 0x400A3C: addList (linkedList.c:261)
|   ->59.99% (405,720B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.01% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 21 41,001,353,111        5,120,160        3,072,096     2,048,064            0
60.00% (3,072,096B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (3,072,000B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->60.00% (3,072,000B) 0x400A3C: addList (linkedList.c:261)
|   ->60.00% (3,072,000B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 22 44,005,074,762        5,057,160        3,034,296     2,022,864            0
 23 45,984,402,494        5,015,240        3,009,144     2,006,096            0
 24 47,469,300,722        4,983,560        2,990,136     1,993,424            0
 25 49,449,353,118        4,941,000        2,964,600     1,976,400            0
 26 51,924,366,475        4,887,280        2,932,368     1,954,912            0
 27 53,409,497,152        4,854,760        2,912,856     1,941,904            0
 28 55,884,285,245        4,800,080        2,880,048     1,920,032            0
 29 58,855,378,658        4,733,600        2,840,160     1,893,440            0
 30 60,834,190,738        4,688,800        2,813,280     1,875,520            0
 31 62,815,084,896        4,643,520        2,786,112     1,857,408            0
 32 65,784,702,013        4,574,800        2,744,880     1,829,920            0
 33 68,823,234,328        4,503,400        2,702,040     1,801,360            0
 34 70,870,823,979        4,454,640        2,672,784     1,781,856            0
 35 72,235,661,909        4,421,840        2,653,104     1,768,736            0
 36 74,283,684,512        4,372,160        2,623,296     1,748,864            0
 37 77,013,910,489        4,305,040        2,583,024     1,722,016            0
 38 79,061,783,943        4,254,000        2,552,400     1,701,600            0
 39 81,108,876,167        4,202,360        2,521,416     1,680,944            0
 40 82,474,303,322        4,167,560        2,500,536     1,667,024            0
 41 84,521,218,609        4,114,840        2,468,904     1,645,936            0
 42 87,250,348,805        4,043,480        2,426,088     1,617,392            0
 43 89,297,286,836        3,989,120        2,393,472     1,595,648            0
 44 91,344,555,943        3,934,000        2,360,400     1,573,600            0
 45 92,710,141,438        3,896,800        2,338,080     1,558,720            0
 46 94,757,239,992        3,840,360        2,304,216     1,536,144            0
 47 97,486,367,613        3,763,800        2,258,280     1,505,520            0
 48 99,533,981,216        3,705,320        2,223,192     1,482,128            0
 49 100,898,201,759        3,665,840        2,199,504     1,466,336            0
 50 102,187,956,061        3,628,120        2,176,872     1,451,248            0
 51 103,477,835,843        3,590,000        2,154,000     1,436,000            0
 52 104,767,412,255        3,551,480        2,130,888     1,420,592            0
 53 106,056,251,947        3,512,560        2,107,536     1,405,024            0
 54 107,345,219,623        3,473,200        2,083,920     1,389,280            0
 55 108,633,828,203        3,433,400        2,060,040     1,373,360            0
 56 109,922,857,686        3,393,120        2,035,872     1,357,248            0
60.00% (2,035,872B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (2,035,776B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->60.00% (2,035,776B) 0x400A3C: addList (linkedList.c:261)
|   ->60.00% (2,035,776B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 57 111,211,764,292        3,352,360        2,011,416     1,340,944            0
 58 112,501,239,520        3,311,080        1,986,648     1,324,432            0
 59 113,790,679,650        3,269,280        1,961,568     1,307,712            0
 60 115,079,473,357        3,226,960        1,936,176     1,290,784            0
 61 116,368,195,845        3,184,080        1,910,448     1,273,632            0
 62 117,657,349,583        3,140,600        1,884,360     1,256,240            0
 63 118,946,200,846        3,096,520        1,857,912     1,238,608            0
 64 120,235,150,313        3,051,800        1,831,080     1,220,720            0
 65 121,524,520,528        3,006,400        1,803,840     1,202,560            0
 66 122,813,443,216        2,960,320        1,776,192     1,184,128            0
60.00% (1,776,192B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,776,096B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->60.00% (1,776,096B) 0x400A3C: addList (linkedList.c:261)
|   ->60.00% (1,776,096B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 67 124,102,129,771        2,913,520        1,748,112     1,165,408            0
 68 125,390,707,332        2,865,960        1,719,576     1,146,384            0
 69 126,680,272,697        2,817,560        1,690,536     1,127,024            0
 70 127,969,682,416        2,768,320        1,660,992     1,107,328            0
 71 129,258,792,623        2,718,200        1,630,920     1,087,280            0
 72 130,547,363,137        2,667,160        1,600,296     1,066,864            0
 73 131,836,034,861        2,615,120        1,569,072     1,046,048            0
 74 133,125,265,893        2,562,000        1,537,200     1,024,800            0
 75 134,414,383,227        2,507,760        1,504,656     1,003,104            0
 76 135,703,517,766        2,452,320        1,471,392       980,928            0
60.00% (1,471,392B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,471,296B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->60.00% (1,471,296B) 0x400A3C: addList (linkedList.c:261)
|   ->60.00% (1,471,296B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.00% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 77 136,992,595,333        2,395,600        1,437,360       958,240            0
 78 138,281,327,371        2,337,520        1,402,512       935,008            0
 79 139,570,055,382        2,277,960        1,366,776       911,184            0
 80 140,858,794,438        2,216,800        1,330,080       886,720            0
 81 142,148,023,665        2,153,880        1,292,328       861,552            0
 82 143,436,979,095        2,089,080        1,253,448       835,632            0
 83 144,726,026,723        2,022,200        1,213,320       808,880            0
 84 146,014,916,689        1,953,040        1,171,824       781,216            0
 85 147,304,153,616        1,881,320        1,128,792       752,528            0
 86 148,593,317,452        1,806,760        1,084,056       722,704            0
60.00% (1,084,056B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (1,083,960B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->59.99% (1,083,960B) 0x400A3C: addList (linkedList.c:261)
|   ->59.99% (1,083,960B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.01% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 87 149,882,289,568        1,729,000        1,037,400       691,600            0
 88 151,170,869,883        1,647,600          988,560       659,040            0
 89 152,459,514,232        1,561,960          937,176       624,784            0
 90 153,748,497,741        1,471,320          882,792       588,528            0
 91 155,037,453,276        1,374,720          824,832       549,888            0
 92 156,326,402,913        1,270,800          762,480       508,320            0
 93 157,615,245,758        1,157,600          694,560       463,040            0
 94 158,903,901,545        1,032,080          619,248       412,832            0
 95 160,192,691,068          889,000          533,400       355,600            0
 96 161,481,483,882          717,960          430,776       287,184            0
60.00% (430,776B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->59.99% (430,680B) 0x4006DD: _addLinkBefore (linkedList.c:68)
| ->59.99% (430,680B) 0x400A3C: addList (linkedList.c:261)
|   ->59.99% (430,680B) 0x400BBD: main (linkedListMain.c:22)
|     
->00.01% (96B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 97 162,770,055,208          490,600          294,360       196,240            0
